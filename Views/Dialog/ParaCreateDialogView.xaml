<UserControl x:Class="ParameterManager.Views.ParaCreateDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:local="clr-namespace:ParameterManager.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey }" Color="#11233B"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#FFE6E6E6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FEC5A8"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="43"></RowDefinition>
        </Grid.RowDefinitions>

        <DataGrid Margin="5,10,5,2"
                ItemsSource="{Binding CreatedParaModels}"               
                HeadersVisibility="Column"
                AutoGenerateColumns="False"
                Background="#FFF"
                BorderBrush="#FFABADB3"
                CanUserAddRows="False"
                GridLinesVisibility="None"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Auto"                      
                IsReadOnly="False">

            <DataGrid.ColumnHeaderStyle>
                <!--  样式类型：DataGridColumnHeader（数据网格列标题）-->
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Height" Value="24"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="#FFE6E6E6" />
                    <Setter Property="BorderBrush" Value="#FFABADB3" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            
            <DataGrid.Resources>
                <!--<Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>-->

                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCreatedSuccess}" Value="True">
                            <Setter Property="Background" Value="#FFF6D3"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCreatedSuccess}" Value="False">
                            <Setter Property="Background" Value="#9becc9"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FEC5A8"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="DataGridCell">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FEC5A8"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding MarkName}" IsReadOnly="True" Width="50" />
                <DataGridTextColumn Header="参数名" Binding="{Binding ParaName}" IsReadOnly="True" Width="*" MaxWidth="200"/>
                <DataGridTextColumn Header="族名" Binding="{Binding FamilyName}" IsReadOnly="True" Width="*" MaxWidth="200"/>
                <DataGridTextColumn Header="说明" Binding="{Binding Description}" IsReadOnly="True" Width="*" MaxWidth="400"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="1" Margin="5,5,5,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding ParaCreatedDescription}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,50,0"/>
            <Button Grid.Column="1" Content="关闭" Command="{Binding CloseCommand}" 
                    Template="{StaticResource ButtonTemplate}"  Style="{StaticResource ButtonStyle}">
            </Button>

        </Grid>

    </Grid>
</UserControl>
